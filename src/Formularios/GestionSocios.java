/**
 * Gestion Socios.java
 */
package Formularios;

import DAO.ISociosDAO;
import DAO.Socio;
import DAO.SociosDAO;
import datos.Clubnautico;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.ClubnauticoJpaController;
import persistencia.exceptions.NonexistentEntityException;

/**
 * Interfaz gráfica donde se manejará todo lo relacionado a la interacción con
 * el usuario.
 *
 * @author Brayan Zavala 00000228311
 */
public class GestionSocios extends javax.swing.JFrame {

    DefaultTableModel modelo;
    public ISociosDAO sociosDAO = new SociosDAO();
    public ClubnauticoJpaController control = new ClubnauticoJpaController();
    int newID;

    /**
     * Constructor que inicia los componentes de la interfaz.
     */
    public GestionSocios() {
        initComponents();
        newID = sociosDAO.consultarUltimoRegistroID();
        newID++;
        txtIdSocio.setText(String.valueOf(newID));
        txtIdSocio.setEnabled(false);
        modelo = new DefaultTableModel();
        modelo.addColumn("IdSocio");
        modelo.addColumn("Nombre");
        modelo.addColumn("Direccion");
        modelo.addColumn("Telefono");
        this.tblSocio.setModel(modelo);
        setLocationRelativeTo(null);
        consultarTodos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdSocio = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSocio = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtConsultarPorID = new javax.swing.JTextField();
        btnConsultarPorID = new javax.swing.JButton();
        labelNadaQueMostrar = new javax.swing.JLabel();
        btnConsultarTodos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Socio:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Dirección:");

        jLabel4.setText("Telefono");

        txtDireccion.setMaximumSize(new java.awt.Dimension(2147483645, 2147483647));
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tblSocio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSocio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSocioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSocio);

        jLabel5.setText("Consultar por ID:");

        txtConsultarPorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultarPorIDActionPerformed(evt);
            }
        });

        btnConsultarPorID.setText("Consultar");
        btnConsultarPorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPorIDActionPerformed(evt);
            }
        });

        labelNadaQueMostrar.setText("Aún no hay nada que mostrar! :(");
        labelNadaQueMostrar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelNadaQueMostrar.setForeground(new java.awt.Color(204, 0, 0));

        btnConsultarTodos.setText("Consultar Todos");
        btnConsultarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtIdSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCancelar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnGuardar)
                                    .addGap(8, 8, 8)
                                    .addComponent(btnEditar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnEliminar))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtConsultarPorID, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnConsultarPorID)
                                    .addGap(3, 3, 3)))
                            .addComponent(btnConsultarTodos)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelNadaQueMostrar)
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNadaQueMostrar)
                            .addComponent(btnConsultarTodos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIdSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnGuardar)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtConsultarPorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultarPorID))))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón para guardar los datos de los socios en la base de datos.
     *
     * @param evt Evento
     */
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Clubnautico socio = new Clubnautico();
        Date str2 = new Date();
        System.out.println(str2);

        if (txtNombre.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "El nombre es un campo requerido!", "Socio", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            socio.setNombre(txtNombre.getText());
        }
        if (txtDireccion.getText().length() == 0) {
            socio.setDireccion("Sin Direccion");
        } else {
            socio.setDireccion(txtDireccion.getText());
        }
        if (txtTelefono.getText().length() == 0) {
            socio.setTelefono("Sin Telefono");
        } else {
            socio.setTelefono(txtTelefono.getText());
        }
        socio.setIdSocio(Integer.parseInt(txtIdSocio.getText()));
        if (control.create(socio)) {
            JOptionPane.showMessageDialog(null, "Se Agrego con Exito", "Socio", JOptionPane.INFORMATION_MESSAGE);
            newID++;
            limpiarTextbox();
        } else {
            JOptionPane.showMessageDialog(null, "        Fallo al guardar Socio \n"
                    + "Es probable que el socio ya exista", "Socio", JOptionPane.ERROR_MESSAGE);
        }
        consultarTodos();


    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Botón cancelar para limpiar las cajas de texto.
     *
     * @param evt Evento.
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiarTextbox();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Botón eliminar para eliminar un socio de la Base de datos.
     *
     * @param evt Evento.
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Clubnautico socio = new Clubnautico();
        socio.setIdSocio(Integer.parseInt(txtIdSocio.getText()));
        if (socio.getIdSocio() == newID) {
            JOptionPane.showMessageDialog(null, " Seleccione o llene los campos\n"
                    + "           para eliminar!", "Socio", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            if (control.destroy(socio.getIdSocio())) {
                JOptionPane.showMessageDialog(null, "Se Eliminó con Exito", "Socio", JOptionPane.INFORMATION_MESSAGE);
                newID = sociosDAO.consultarUltimoRegistroID() + 1;
                limpiarTextbox();
            }
        } catch (NonexistentEntityException ex) {
            JOptionPane.showMessageDialog(null, "Fallo al eliminar el Socio" + ex, "Socio", JOptionPane.ERROR_MESSAGE);
        }
        consultarTodos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Botón editar para editar un socio de la base de datos.
     *
     * @param evt Evento.
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        Clubnautico socio = new Clubnautico();
        socio.setIdSocio(Integer.parseInt(txtIdSocio.getText()));
        if (socio.getIdSocio() == newID) {
            JOptionPane.showMessageDialog(null, " Seleccione o llene los campos\n"
                    + "           para editar!", "Socio", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        socio.setNombre(txtNombre.getText());
        socio.setDireccion(txtDireccion.getText());
        socio.setTelefono(txtTelefono.getText());
        try {
            if (control.edit(socio)) {
                JOptionPane.showMessageDialog(null, "Se Actualizo con Exito", "Socio", JOptionPane.INFORMATION_MESSAGE);
                limpiarTextbox();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Fallo al actualizar el Socio", "Socio", JOptionPane.ERROR_MESSAGE);
        }
        consultarTodos();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * Evento para detectar el click a un socio y llenar los campos de texto.
     *
     * @param evt Evento al clickar.
     */
    private void tblSocioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSocioMouseClicked

        DefaultTableModel model = (DefaultTableModel) tblSocio.getModel();
        String idSocio = model.getValueAt(tblSocio.getSelectedRow(), 0).toString();
        String nombre = model.getValueAt(tblSocio.getSelectedRow(), 1).toString();
        String direccion = model.getValueAt(tblSocio.getSelectedRow(), 2).toString();
        String telefono = model.getValueAt(tblSocio.getSelectedRow(), 3).toString();
        txtIdSocio.setText(idSocio);
        txtNombre.setText(nombre);
        if (!direccion.equals("Sin Direccion")) {
            txtDireccion.setText(direccion);
        } else {
            txtDireccion.setText("");
        }
        if (!telefono.equals("Sin Telefono")) {
            txtTelefono.setText(telefono);
        } else {
            txtTelefono.setText("");
        }
    }//GEN-LAST:event_tblSocioMouseClicked

    private void txtConsultarPorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultarPorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultarPorIDActionPerformed

    private void btnConsultarPorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPorIDActionPerformed
        consultarSocio();
    }//GEN-LAST:event_btnConsultarPorIDActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    /**
     * Botón para consultar todos los socios.
     *
     * @param evt Evento.
     */
    private void btnConsultarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarTodosActionPerformed
        consultarTodos();
        limpiarTextbox();
    }//GEN-LAST:event_btnConsultarTodosActionPerformed

    /**
     * Método main
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionSocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionSocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionSocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionSocios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionSocios().setVisible(true);
            }
        });
    }

    /**
     * Método para consultar todos los socios y llenar la tabla.
     */
    public void consultarTodos() {
        List<Clubnautico> list = control.findClubnauticoEntities();

        DefaultTableModel model = (DefaultTableModel) tblSocio.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Object rowData[] = new Object[4];
        if (list != null) {
            for (int i = 0; i < list.size(); i++) {
                rowData[0] = list.get(i).getIdSocio();
                rowData[1] = list.get(i).getNombre();
                rowData[2] = list.get(i).getDireccion();
                rowData[3] = list.get(i).getTelefono();
                model.addRow(rowData);
                labelNadaQueMostrar.setVisible(false);
            }
        } else {
            labelNadaQueMostrar.setVisible(true);
        }

    }

    /**
     * Método para consultar un socio por ID.
     */
    public void consultarSocio() {
        List<Socio> list = sociosDAO.consultarTodos();
        int idConsulta = 0;
        try {
            idConsulta = Integer.parseInt(txtConsultarPorID.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID válido!", "Socio", JOptionPane.INFORMATION_MESSAGE);
            txtConsultarPorID.setText("");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblSocio.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (int i = 0; i < list.size(); i++) {
            if (idConsulta == list.get(i).getIdSocio()) {

                Object rowData[] = new Object[4];
                rowData[0] = list.get(i).idSocio;
                rowData[1] = list.get(i).Nombre;
                rowData[2] = list.get(i).Direccion;
                rowData[3] = list.get(i).Telefono;
                model.addRow(rowData);
                String idSocio = model.getValueAt(0, 0).toString();
                String nombre = model.getValueAt(0, 1).toString();
                String direccion = model.getValueAt(0, 2).toString();
                String telefono = model.getValueAt(0, 3).toString();
                txtIdSocio.setText(idSocio);
                txtNombre.setText(nombre);
                txtDireccion.setText(direccion);
                txtTelefono.setText(telefono);
                labelNadaQueMostrar.setVisible(false);
                return;
            }

        }
        JOptionPane.showMessageDialog(null, "No se encontró al socio!", "Socio", JOptionPane.INFORMATION_MESSAGE);
        limpiarTextbox();
    }

    /**
     * Método para limpiar las cajas de texto.
     */
    public void limpiarTextbox() {
        txtIdSocio.setText(String.valueOf(newID));
        txtNombre.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtConsultarPorID.setText("");

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultarPorID;
    private javax.swing.JButton btnConsultarTodos;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelNadaQueMostrar;
    private javax.swing.JTable tblSocio;
    private javax.swing.JTextField txtConsultarPorID;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdSocio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
